<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.9.1"/>
<title>mydash: libsrc/List.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">mydash
   &#160;<span id="projectnumber">Version1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_3bdd366c61c312c028aa5c13956d6734.html">libsrc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">List.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="libsrc_2List_8h.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">    List.h: Defines the interface for a doubly-linked list.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">@author kgross</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#ifndef __LIST_H</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#define __LIST_H</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="libsrc_2common_8h.html">common.h</a>&quot;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="libsrc_2Node_8h.html">Node.h</a>&quot;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="libsrc_2List_8h.html#aa89b8bc105d9a09d4e7c06e8b34078a7">   15</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> <a class="code" href="structlist.html">List</a>;</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="libsrc_2List_8h.html#a861ccde58c51198da7548ab818f1bbdd">   16</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> * <a class="code" href="include_2List_8h.html#a861ccde58c51198da7548ab818f1bbdd">ListPtr</a>;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">struct </span><a class="code" href="structlist.html">list</a> {</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keywordtype">int</span> <a class="code" href="structlist.html#a3b03adad0c0429bae9493667ff366dc2">size</a>;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <a class="code" href="structnode.html">NodePtr</a> <a class="code" href="structlist.html#a357a56cbe66297fb5cc5cd8ba9fa6cf4">head</a>;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <a class="code" href="structnode.html">NodePtr</a> <a class="code" href="structlist.html#a7fba27040dab68e2d6acc2885b6df167">tail</a>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  int (*<a class="code" href="structlist.html#ad3ad01e7ea22f2e0590e1d5549c8ab7f">compareTo</a>)(<span class="keyword">const</span> <span class="keywordtype">void</span> *, <span class="keyword">const</span> <span class="keywordtype">void</span> *);</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordtype">char</span> * (*toString)(<span class="keyword">const</span> <span class="keywordtype">void</span> *);</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  void (*<a class="code" href="structlist.html#a04091cb910e425d1226562197fe0bf8c">freeObject</a>)(<span class="keyword">const</span> <span class="keywordtype">void</span> *);</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;};</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/* prototypes of public methods */</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;ListPtr <a class="code" href="include_2List_8h.html#ac9beedc5dbdcce9fb20bfd5edbe2bd08">createList</a>(<span class="keywordtype">int</span>(*<a class="code" href="include_2Object_8h.html#a5cadf14267575f2ee8f0cf226af7a7aa">compareTo</a>)(<span class="keyword">const</span> <span class="keywordtype">void</span> *, <span class="keyword">const</span> <span class="keywordtype">void</span> *), </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                   <span class="keywordtype">char</span> * (*<a class="code" href="include_2Object_8h.html#a6dfc43d9b4cbc992846435ee727f3454">toString</a>)(<span class="keyword">const</span> <span class="keywordtype">void</span> *),</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                   <span class="keywordtype">void</span> (*<a class="code" href="include_2Object_8h.html#ad224f50cb1912941fc68947b6fc03219">freeObject</a>)(<span class="keyword">const</span> <span class="keywordtype">void</span> *));</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">void</span> <a class="code" href="include_2List_8h.html#ad9957663fe65761dbf9031ee8280fdae">freeList</a>(<span class="keyword">const</span> ListPtr L);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">int</span> <a class="code" href="include_2List_8h.html#a43f9b7f7f62dca403a8629190a533a23">getSize</a>(<span class="keyword">const</span> ListPtr L);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<a class="code" href="include_2common_8h.html#a127a96e09108f503cca20256eaa4ddff">Boolean</a> <a class="code" href="include_2List_8h.html#a6ac4ede2527b19f1b1da9da0d85cb976">isEmpty</a>(<span class="keyword">const</span> ListPtr L);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keywordtype">void</span> <a class="code" href="include_2List_8h.html#a476cc4f9f3eac74de69922b337d3f5d4">addAtFront</a>(ListPtr <a class="code" href="structlist.html">list</a>, <a class="code" href="structnode.html">NodePtr</a> <a class="code" href="structnode.html">node</a>);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">void</span> <a class="code" href="include_2List_8h.html#a194ecb3333d63b8d9b65c9a1bc12e395">addAtRear</a>(ListPtr <a class="code" href="structlist.html">list</a>, <a class="code" href="structnode.html">NodePtr</a> <a class="code" href="structnode.html">node</a>);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<a class="code" href="structnode.html">NodePtr</a> <a class="code" href="include_2List_8h.html#a21ea604b2c4b634c83152e4de532ca33">removeFront</a>(ListPtr <a class="code" href="structlist.html">list</a>);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<a class="code" href="structnode.html">NodePtr</a> <a class="code" href="include_2List_8h.html#a79b7613686651c0fdd9ba75859ab1cf4">removeRear</a>(ListPtr <a class="code" href="structlist.html">list</a>);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<a class="code" href="structnode.html">NodePtr</a> <a class="code" href="include_2List_8h.html#a7759b3a50942a4d588c73757ce2e15bf">removeNode</a>(ListPtr <a class="code" href="structlist.html">list</a>, <a class="code" href="structnode.html">NodePtr</a> <a class="code" href="structnode.html">node</a>);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<a class="code" href="structnode.html">NodePtr</a> <a class="code" href="include_2List_8h.html#aa5520d98825d2037e3d05b369c6e7dc1">search</a>(<span class="keyword">const</span> ListPtr <a class="code" href="structlist.html">list</a>, <span class="keyword">const</span> <span class="keywordtype">void</span> * obj);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordtype">void</span> <a class="code" href="include_2List_8h.html#a98ef2e3e4d692de272b451a11015fdad">reverseList</a>(ListPtr L);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keywordtype">int</span> <a class="code" href="include_2List_8h.html#ac04bab051b7a4fec4b9a69f851de13ae">getMaxJobId</a>(ListPtr L);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keywordtype">void</span> <a class="code" href="include_2List_8h.html#afd2b3015c02dc09c508149f0873d64b0">printList</a>(<span class="keyword">const</span> ListPtr L);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __LIST_H */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="ttc" id="include_2List_8h_html_ac04bab051b7a4fec4b9a69f851de13ae"><div class="ttname"><a href="include_2List_8h.html#ac04bab051b7a4fec4b9a69f851de13ae">getMaxJobId</a></div><div class="ttdeci">int getMaxJobId(ListPtr L)</div><div class="ttdoc">A Doubly-linked List Class. </div><div class="ttdef"><b>Definition:</b> List.c:16</div></div>
<div class="ttc" id="structnode_html"><div class="ttname"><a href="structnode.html">node</a></div><div class="ttdef"><b>Definition:</b> Node.h:15</div></div>
<div class="ttc" id="structlist_html_a04091cb910e425d1226562197fe0bf8c"><div class="ttname"><a href="structlist.html#a04091cb910e425d1226562197fe0bf8c">list::freeObject</a></div><div class="ttdeci">void(* freeObject)(const void *)</div><div class="ttdef"><b>Definition:</b> List.h:24</div></div>
<div class="ttc" id="structlist_html_a7fba27040dab68e2d6acc2885b6df167"><div class="ttname"><a href="structlist.html#a7fba27040dab68e2d6acc2885b6df167">list::tail</a></div><div class="ttdeci">NodePtr tail</div><div class="ttdef"><b>Definition:</b> List.h:21</div></div>
<div class="ttc" id="structlist_html_ad3ad01e7ea22f2e0590e1d5549c8ab7f"><div class="ttname"><a href="structlist.html#ad3ad01e7ea22f2e0590e1d5549c8ab7f">list::compareTo</a></div><div class="ttdeci">int(* compareTo)(const void *, const void *)</div><div class="ttdef"><b>Definition:</b> List.h:22</div></div>
<div class="ttc" id="include_2List_8h_html_a7759b3a50942a4d588c73757ce2e15bf"><div class="ttname"><a href="include_2List_8h.html#a7759b3a50942a4d588c73757ce2e15bf">removeNode</a></div><div class="ttdeci">NodePtr removeNode(ListPtr list, NodePtr node)</div><div class="ttdoc">Removes the node pointed to by the given node pointer from the list and returns the pointer to it...</div><div class="ttdef"><b>Definition:</b> List.c:222</div></div>
<div class="ttc" id="include_2List_8h_html_a194ecb3333d63b8d9b65c9a1bc12e395"><div class="ttname"><a href="include_2List_8h.html#a194ecb3333d63b8d9b65c9a1bc12e395">addAtRear</a></div><div class="ttdeci">void addAtRear(ListPtr list, NodePtr node)</div><div class="ttdoc">Adds a node to the rear of the list. </div><div class="ttdef"><b>Definition:</b> List.c:141</div></div>
<div class="ttc" id="structlist_html_a3b03adad0c0429bae9493667ff366dc2"><div class="ttname"><a href="structlist.html#a3b03adad0c0429bae9493667ff366dc2">list::size</a></div><div class="ttdeci">int size</div><div class="ttdef"><b>Definition:</b> List.h:19</div></div>
<div class="ttc" id="include_2List_8h_html_a6ac4ede2527b19f1b1da9da0d85cb976"><div class="ttname"><a href="include_2List_8h.html#a6ac4ede2527b19f1b1da9da0d85cb976">isEmpty</a></div><div class="ttdeci">Boolean isEmpty(const ListPtr L)</div><div class="ttdoc">Checks if the list is empty. </div><div class="ttdef"><b>Definition:</b> List.c:102</div></div>
<div class="ttc" id="include_2List_8h_html_a476cc4f9f3eac74de69922b337d3f5d4"><div class="ttname"><a href="include_2List_8h.html#a476cc4f9f3eac74de69922b337d3f5d4">addAtFront</a></div><div class="ttdeci">void addAtFront(ListPtr list, NodePtr node)</div><div class="ttdoc">Adds a node to the front of the list. </div><div class="ttdef"><b>Definition:</b> List.c:116</div></div>
<div class="ttc" id="include_2List_8h_html_a861ccde58c51198da7548ab818f1bbdd"><div class="ttname"><a href="include_2List_8h.html#a861ccde58c51198da7548ab818f1bbdd">ListPtr</a></div><div class="ttdeci">struct list * ListPtr</div><div class="ttdef"><b>Definition:</b> List.h:16</div></div>
<div class="ttc" id="include_2List_8h_html_ac9beedc5dbdcce9fb20bfd5edbe2bd08"><div class="ttname"><a href="include_2List_8h.html#ac9beedc5dbdcce9fb20bfd5edbe2bd08">createList</a></div><div class="ttdeci">ListPtr createList(int(*compareTo)(const void *, const void *), char *(*toString)(const void *), void(*freeObject)(const void *))</div><div class="ttdoc">Constructor: Allocates a new List object and initializes its members. </div><div class="ttdef"><b>Definition:</b> List.c:54</div></div>
<div class="ttc" id="include_2List_8h_html_a43f9b7f7f62dca403a8629190a533a23"><div class="ttname"><a href="include_2List_8h.html#a43f9b7f7f62dca403a8629190a533a23">getSize</a></div><div class="ttdeci">int getSize(const ListPtr L)</div><div class="ttdoc">Returns the size of the given list. </div><div class="ttdef"><b>Definition:</b> List.c:92</div></div>
<div class="ttc" id="include_2List_8h_html_a21ea604b2c4b634c83152e4de532ca33"><div class="ttname"><a href="include_2List_8h.html#a21ea604b2c4b634c83152e4de532ca33">removeFront</a></div><div class="ttdeci">NodePtr removeFront(ListPtr list)</div><div class="ttdoc">Removes the node from the front of the list (the head node) and returns a pointer to the node that wa...</div><div class="ttdef"><b>Definition:</b> List.c:166</div></div>
<div class="ttc" id="structlist_html_a357a56cbe66297fb5cc5cd8ba9fa6cf4"><div class="ttname"><a href="structlist.html#a357a56cbe66297fb5cc5cd8ba9fa6cf4">list::head</a></div><div class="ttdeci">NodePtr head</div><div class="ttdef"><b>Definition:</b> List.h:20</div></div>
<div class="ttc" id="include_2List_8h_html_ad9957663fe65761dbf9031ee8280fdae"><div class="ttname"><a href="include_2List_8h.html#ad9957663fe65761dbf9031ee8280fdae">freeList</a></div><div class="ttdeci">void freeList(const ListPtr L)</div><div class="ttdoc">Frees all elements of the given list and the ListPtr itself. </div><div class="ttdef"><b>Definition:</b> List.c:74</div></div>
<div class="ttc" id="include_2List_8h_html_a98ef2e3e4d692de272b451a11015fdad"><div class="ttname"><a href="include_2List_8h.html#a98ef2e3e4d692de272b451a11015fdad">reverseList</a></div><div class="ttdeci">void reverseList(ListPtr L)</div><div class="ttdoc">Reverses the order of the given list. </div><div class="ttdef"><b>Definition:</b> List.c:269</div></div>
<div class="ttc" id="include_2common_8h_html_a127a96e09108f503cca20256eaa4ddff"><div class="ttname"><a href="include_2common_8h.html#a127a96e09108f503cca20256eaa4ddff">Boolean</a></div><div class="ttdeci">int Boolean</div><div class="ttdef"><b>Definition:</b> common.h:10</div></div>
<div class="ttc" id="include_2List_8h_html_afd2b3015c02dc09c508149f0873d64b0"><div class="ttname"><a href="include_2List_8h.html#afd2b3015c02dc09c508149f0873d64b0">printList</a></div><div class="ttdeci">void printList(const ListPtr L)</div><div class="ttdoc">Prints the list. </div><div class="ttdef"><b>Definition:</b> List.c:293</div></div>
<div class="ttc" id="include_2Object_8h_html_a6dfc43d9b4cbc992846435ee727f3454"><div class="ttname"><a href="include_2Object_8h.html#a6dfc43d9b4cbc992846435ee727f3454">toString</a></div><div class="ttdeci">char * toString(const void *)</div><div class="ttdef"><b>Definition:</b> Object.c:43</div></div>
<div class="ttc" id="structlist_html"><div class="ttname"><a href="structlist.html">list</a></div><div class="ttdef"><b>Definition:</b> List.h:18</div></div>
<div class="ttc" id="libsrc_2Node_8h_html"><div class="ttname"><a href="libsrc_2Node_8h.html">Node.h</a></div></div>
<div class="ttc" id="libsrc_2common_8h_html"><div class="ttname"><a href="libsrc_2common_8h.html">common.h</a></div></div>
<div class="ttc" id="include_2List_8h_html_a79b7613686651c0fdd9ba75859ab1cf4"><div class="ttname"><a href="include_2List_8h.html#a79b7613686651c0fdd9ba75859ab1cf4">removeRear</a></div><div class="ttdeci">NodePtr removeRear(ListPtr list)</div><div class="ttdoc">Removes the node from the rear of the list (the tail node) and returns a pointer to the node that was...</div><div class="ttdef"><b>Definition:</b> List.c:195</div></div>
<div class="ttc" id="include_2List_8h_html_aa5520d98825d2037e3d05b369c6e7dc1"><div class="ttname"><a href="include_2List_8h.html#aa5520d98825d2037e3d05b369c6e7dc1">search</a></div><div class="ttdeci">NodePtr search(const ListPtr list, const void *obj)</div><div class="ttdoc">Searches the list for a node with the given key and returns the pointer to the found node...</div><div class="ttdef"><b>Definition:</b> List.c:247</div></div>
<div class="ttc" id="include_2Object_8h_html_a5cadf14267575f2ee8f0cf226af7a7aa"><div class="ttname"><a href="include_2Object_8h.html#a5cadf14267575f2ee8f0cf226af7a7aa">compareTo</a></div><div class="ttdeci">int compareTo(const void *, const void *)</div><div class="ttdef"><b>Definition:</b> Object.c:31</div></div>
<div class="ttc" id="include_2Object_8h_html_ad224f50cb1912941fc68947b6fc03219"><div class="ttname"><a href="include_2Object_8h.html#ad224f50cb1912941fc68947b6fc03219">freeObject</a></div><div class="ttdeci">void freeObject(const void *)</div><div class="ttdef"><b>Definition:</b> Object.c:59</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Sep 28 2015 14:46:53 for mydash by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.9.1
</small></address>
</body>
</html>
