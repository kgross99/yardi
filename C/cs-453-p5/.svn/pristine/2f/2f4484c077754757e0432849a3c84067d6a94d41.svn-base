<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.9.1"/>
<title>mydash: Main Page</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">mydash
   &#160;<span id="projectnumber">Version1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li class="current"><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">mydash Documentation</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>CS453 Project 1 my dash</p><dl class="section author"><dt>Author</dt><dd>kgross</dd></dl>
<pre></pre><pre>README              This file
doxygen-config      Sample config file for doxygen
<a class="el" href="loop_8c.html">loop.c</a>            Simple infinite loop program that doesn't use significant resources
Makefile            Build file for this mydash
TestCases           An list of test cases
test-harness/       An example (incomplete) test harness for the dash project
test-readline.c     Example file on how to use auto completion with readline library
valgrind.supp       Example suppression file for valgrind to avoid lots of spurious error messages about the readline library
<a class="el" href="mydash_8c.html">mydash.c</a>        The main mydash source code file
/libsrc         Folder containing the linked list that is used as a library for this project.</pre><pre><h2>Design 
</h2>
</pre><pre>
This project was done totally in the <a class="el" href="mydash_8c.html">mydash.c</a> file.  It uses the readlines library to allow tab command completion and command history, it also uses the doubly linked list I created from project 0 as a library to hold the job information.</pre><pre>Basic design of the program, the function expand_command takes the command line and determines what needs to be done with it.  It uses the background flag to 
control if it has to be run in the background and added to the jobs list.</pre><pre>The check_for_background funtion looks for the ampersand at the end of the line to tell if it needs to be run in the background.</pre><pre>Test cases with my additions can be found in the TestCases file.</pre><pre>The biggest challenges of this assignment had to do with a simple problem of job id's to use.  Only jobs that are background jobs are assigned an id, and the id to be assigned is the lowest id number that does not have any used id's above it in the list.  To do this I ended up modifying my linked list and object classes slightly.  The object was modifed to hold the job id in it so it is stored with the rest of the job.   I added a function to the linked list to give me the next available job id.  To do this is iterates through all jobs and returns 1 number higher than the highest job id that is still in the list.  I could not figure out any other way to do this simpily since I had already setup the progrm to use the pid as the key since that will be unique to the system, where the jobid could since it is generated by mydash not be unique to all processes.</pre><pre>The other major challenge has been the svn-version number.  I can not get the svn_version method to be compiled and linked into the program so I can access it with the -v command yet.</pre><pre><h2>Running
</h2>
</pre><pre>
Run the program by running:
$ ./mydash</pre><pre><h2>Valgrind
</h2>
</pre><pre></pre><pre>Use valgrind as follows</pre><pre>valgrind &ndash;leak-check=yes &ndash;suppressions=valgrind.supp ./mydash</pre><pre>You will need the suppression file valgrind.supp that suppresses errors from
the readline library so you can focus on issues emanating from your code.</pre><pre>Memory errors:  Having some major problems with memory errors.  When I run valgrind, when the first command is proccessed it has lots of errors being printed out, most via my trim function.  I have done a bunch of searches and have not come up with a solution to this issue.   But the good part is after I exit the problem it does not report any memory leaks.</pre><pre><h2>Documentation
</h2>
</pre><pre></pre><pre>Generate documentation using doxygen tool. Use</pre><pre>make dox</pre><pre>to trigger doxygen. Use the sample doxygen-config file for using with your
project. Note that, just like javadocs, you can use any HTML tags in your
comments. All javadoc tags and comments are supported by doxygen.
</pre> </div></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Sep 28 2015 14:46:53 for mydash by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.9.1
</small></address>
</body>
</html>
